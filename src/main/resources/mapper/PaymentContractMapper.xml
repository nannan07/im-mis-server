<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.allmsi.mis.dao.PaymentContractMapper" >
  <resultMap id="BaseResultMap" type="com.allmsi.mis.model.po.PaymentContract" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="payId" property="payId" jdbcType="VARCHAR" />
    <result column="contId" property="contId" jdbcType="VARCHAR" />
    <result column="contName" property="contName" jdbcType="VARCHAR" />
    <result column="cTime" property="cTime" jdbcType="TIMESTAMP" />
    <result column="uTime" property="uTime" jdbcType="TIMESTAMP" />
    <result column="del" property="del" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, payId, contId, contName, cTime, uTime, del
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from im_tm_payment_contract
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from im_tm_payment_contract
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.allmsi.mis.model.po.PaymentContract" >
    insert into im_tm_payment_contract (id, payId, contId, 
      contName, cTime, uTime, 
      del)
    values (#{id,jdbcType=VARCHAR}, #{payId,jdbcType=VARCHAR}, #{contId,jdbcType=VARCHAR}, 
      #{contName,jdbcType=VARCHAR}, #{cTime,jdbcType=TIMESTAMP}, #{uTime,jdbcType=TIMESTAMP}, 
      #{del,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.allmsi.mis.model.po.PaymentContract" >
    insert into im_tm_payment_contract
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="payId != null" >
        payId,
      </if>
      <if test="contId != null" >
        contId,
      </if>
      <if test="contName != null" >
        contName,
      </if>
      <if test="cTime != null" >
        cTime,
      </if>
      <if test="uTime != null" >
        uTime,
      </if>
      <if test="del != null" >
        del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="payId != null" >
        #{payId,jdbcType=VARCHAR},
      </if>
      <if test="contId != null" >
        #{contId,jdbcType=VARCHAR},
      </if>
      <if test="contName != null" >
        #{contName,jdbcType=VARCHAR},
      </if>
      <if test="cTime != null" >
        #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uTime != null" >
        #{uTime,jdbcType=TIMESTAMP},
      </if>
      <if test="del != null" >
        #{del,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.allmsi.mis.model.po.PaymentContract" >
    update im_tm_payment_contract
    <set >
      <if test="payId != null" >
        payId = #{payId,jdbcType=VARCHAR},
      </if>
      <if test="contId != null" >
        contId = #{contId,jdbcType=VARCHAR},
      </if>
      <if test="contName != null" >
        contName = #{contName,jdbcType=VARCHAR},
      </if>
      <if test="cTime != null" >
        cTime = #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uTime != null" >
        uTime = #{uTime,jdbcType=TIMESTAMP},
      </if>
      <if test="del != null" >
        del = #{del,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.allmsi.mis.model.po.PaymentContract" >
    update im_tm_payment_contract
    set payId = #{payId,jdbcType=VARCHAR},
      contId = #{contId,jdbcType=VARCHAR},
      contName = #{contName,jdbcType=VARCHAR},
      cTime = #{cTime,jdbcType=TIMESTAMP},
      uTime = #{uTime,jdbcType=TIMESTAMP},
      del = #{del,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>